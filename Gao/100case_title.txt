case0:#BMI

linux:ps -lA | grep 'Z'

temp:import socket

tips:PVWJZBHLVZCVCYJM

case1:#1 2 3 4四个数字，可组成多少个互不相同无重复的三位数，分别是哪些

case2:#利润(I)低于或等于10万元时，奖金可提10%；

case3:#一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？

case4:#输入某年某月某日，判断这一天是这一年的第几天

case5:#输入三个整数x,y,z，请把这三个数由小到大输出

case5_2:#输入三个整数x,y,z，请把这三个数由小到大输出

case6:#斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……。

case6_2:#斐波那契数列（Fibonacci sequence），又称黄金分割数列，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34...输出n个fib

case7:#将一个列表的数据复制到另一个列表中

case8:#输出9*9口诀

case9:#暂停一秒输出,使用 time 模块的 sleep() 函数

case10:#暂停一秒输出，并格式化当前时间

case11:#古典问题：有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？

case12:#判断101-200之间有多少个素数，并输出所有素数

case13:#打印出所有的"水仙花数"，所谓"水仙花数"是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个"水仙花数"，因为153=1的三次方＋5的三次方＋3的三次方

case14:i =int (input('Please input integer:'))

case14_2:def reduceNum(n):

case15:#if语句：学习成绩>=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示

case16:#输出指定格式的日期
case18:#求s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加由键盘控制。

case18_2:from functools import reduce

case19:#一个数如果恰好等于它的因子之和，这个数就称为"完数"。例如6=1＋2＋3.编程找出1000以内的所有完数。

case19_2:from sys import stdout

case20:#一球从100米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？

case21:#猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。

case22:#甲队为a,b,c三人，乙队为x,y,z三人,a说他不和x比，c说他不和x,z比

case23:from sys import stdout

case24:#有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前20项之和

case25:#求1+2!+3!+...+20!的和

case26:#利用递归方法求5!

case27:#利用递归，将所输入的5个字符，以相反顺序打印出来

case28:def age(n):

case29:#给一个不多于5位的正整数求它是几位数，逆序打印出各位数字

case30:#判断一个数是否为回文数，12321是回文数

case31:#仅输入一个字母判断是星期几

case32:#按相反的顺序输出列表的值

case33:#按逗号分隔列表

case34:#使用函数，输出三次RUNOOB字符串

case35:#文本颜色设置

case36:#求100之内的素数

case37:#对10个数进行排序

case38:#求一个3*3矩阵主对角线元素之和

case39:#有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中

case40:#将一个数组逆序输出

case41:#模仿静态变量的用法

case42:#变量作用域

case43:#模仿静态变量(static)另一案例

case44:#两个3行3列的矩阵，实现其对应位置的数据相加并返回一个新矩阵

case45:#统计 1 到 100 之和

case45_2:def Sum(n):

case46:#求输入数字的平方，如果平方运算后小于50则退出

case47:#两个变量值互换

case48:#数字比较

case49:#使用lambda来创建匿名函数

case50:#输出一个随机数

case51:#学习使用按位与 & | ^

case54:#取一个整数a从右端开始的4〜7位,1 & any = any

case60:#计算字符串长度

case61:#打印出杨辉三角形（要求打印出10行如下图）

case62:if __name__ == '__main__':

case66:#输入3个数a,b,c，按大小顺序输出

case67:#输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组

case68:#有 n 个整数，使其前面各数顺序向后移 m 个位置，最后 m 个数变成最前面的 m 个数

case69:#n个人围成一圈,从第一个人开始报数，凡报到3的人退出圈子，问最后留下的是原来第几号的那位

case70:#写一个函数求一个字符串的长度，在main函数中输入字符串，并输出其长度

case71:
case72:#创建一个链表

case73:#反向输出一个链表,reverse

case74:#列表排序及连接 连接a b两个列表

case75:#每次循环时n均被置0，每次循环均执行if语句

case76:#写一个函数，n为偶数调用函数求1/2+1/4+...+1/n,n为奇数调用函数1/1+1/3+...+1/n

case77:#循环输出列表

case78:person = {"li":18,"wang":50,"zhang":20,"sun":22}

case79:#字符串排序
case80:#五只猴子来分桃子，分五份，多一个，多的一个扔海中，拿走一份。第二只又平均分成五份，又多了一个，多的一个扔入海中，拿走了一份，第三、第四、第五依旧，问海滩上原来最少有多少个桃子？

case81:#??是两位数, 809*??为四位数，8*??的结果为两位数，9*??的结果为3位数。求??代表的两位数，及809*??后的结果。

case82:#八进制转换为十进制

case83:#求0—7所能组成的奇数个数

case84:#连接字符串

case85:#输入一个奇数，然后判断最少几个 9 除于该数的结果为整数

case86:#两个字符串连接程序

case87:#结构体变量传递

case88:#读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的*

case89:##加密传递四位的整数：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换

case90:#列表使用实例

case91:#time.time() 返回当前时间的时间戳（1970纪元后经过的浮点秒数

case92:#输出for i in range(3000) 程序运行的时间 

case93:#perf_counter()返回当前的计算机系统时间,需要调用两次计算差值来统计程序运行时间

case94:#

case95:#字符串日期转换为易读的日期格式

case96:#计算字符串中子串出现的次数

case96_2:#计算字符串中子串出现的次数

case97:#键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个#为止

case97_1:if __name__ == '__main__':

case97_2:#键盘输入一些字符，逐个把它们写到磁盘文件上，直到输入一个#为止

case98:#键盘输入一个字符串，小写字母全部转换成大写字母，然后输出到一个磁盘文件"test"中保存

case99:#文件A和B,各存放一行字母,两个文件信息按字母顺序排列输出到文件C中

100case_title:case0:#BMI

case100:#列表转换为字典

case101:#两数相加

case102:#用户输入一个数字，并计算这个数字的平方根

case103:#以下实例为通过用户输入数字，并计算二次方程

case104:#定义函数计算圆的面积

case105:#random随机数生成函数

case106:#if 语句判断数字

case107:#创建自定义函数 is_number() 方法来判断字符串是否为数字

case108:#输入一个数判断是否为质数

case109:#输出指定范围内的素数

case110:#n!=1×2×3×...×n,factorial

case111:#九九乘法表

case112:#斐波那契数列是 0, 1, 1, 2, 3, 5, 8, 13

case113:#输入数字检测是否为阿姆斯特朗数:一个n位正整数等于其各位数字的n次方之和,例如1^3 + 5^3 + 3^3 = 153。

case114:#十进制转二进制、八进制、十六进制

case115:#实现ASCII码与字符相互转换 chr: ord:

case116:#实现最大公约数算法

case117:#实现最小公倍数算法

case118:#实现简单计算器实现，包括两个数基本的加减乘除运算

case119:#导入 datetime 模块来获取昨天的日期

case120:"""30 个人在一条船上,需要 15 人下船,排成一队的位置即为他们的编号,数到 9 的人下船;直到船上仅剩 15 人为止,问下船了人的编号"""

case120_1:"""30 个人在一条船上,需要 15 人下船,排成一队的位置即为他们的编号,数到 9 的人下船;直到船上仅剩 15 人为止,问下船了人的编号"""

case120_3:n=1

case121:"""五人捕鱼,A可将鱼分为五份,多余的一条扔掉,拿走一份

case122:#使用 time 模块来实现秒表功能

case123:#

case124:#计算 n 个自然数的立方和

case125:#定义一个整型数组，并计算元素之和

case126:#定义一个整型数组，并将指定个数的元素翻转到数组的尾部

case127:#给定一个字符串，然后移除指定位置的字符
case128:#使用正则表达式来获取字符串的 URL

case129:#给定一个字典，然后按键(key)或值(value)对字典进行排序

case130:#给定一个字符串的时间，将其转换为时间戳

case131:#计算几天前时间并转换为指定格式

case132:#给定一个时间戳，将其转换为指定格式的时间

case133:#二分查找,适用于有规律的list，每次从中间开始查找逐渐缩小范围

case134:#插入排序通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入

case134_2:#插入排序通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入

case135:#读目录下所有文件的第一行，写入另一文件

case136:#快速排序使用分治法（Divide and conquer）把一个list分为较小和较大的2个子序列，然后递归地排序两个子序列

case137:#选择排序（Selection sort）先在未排序列中找到最小（大）元素放到起始，再继续寻找最小（大）元素，放到已排序序列的末尾。

case138:#冒泡排序（Bubble Sort）重复地走访数列，一次比较两个元素改变顺序，直到没有再需要交换停止走访，算法的名字由来是因为越小的元素会经由交换慢慢"浮"到数列的顶端

case139:#归并排序（Merge sort，或mergesort）是在归并操作上的一种有效的排序算法,是分治法（Divide and Conquer）的一个非常典型的应用。

case140:#计数排序的核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。

case141:#希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。是非稳定排序算法。先将整个序列分割成为若干子序列分别进行直接插入排序，待整个序列"基本有序"时，再对全体记录进行依次直接插入排序。

case142:#对一个有向无环图(Directed Acyclic Graph简称DAG)G进行拓扑排序，是将G中所有顶点排成一个线性序列，使得图中任意一对顶点u和v，若边(u,v)∈E(G)，则u在线性序列中出现在v之前。通常，这样的线性序列称为满足拓扑次序(Topological Order)的序列，简称拓扑序列。简单的说，由某个集合上的一个偏序得到该集合上的一个全序，这个操作称之为拓扑排序。

case143:#堆排序（Heapsort）利用堆这种数据结构所设计的一种排序算法。1.建立大顶堆2.堆顶与数组末尾元素交换3.剩余序列重复建立顶堆交换

case144:#spilt

case145:#re.search

case146:#urllib

case147:#整数与IP地址互转

case149hex2binary:import binascii

case149hex2binary_2:hex_data = "12345678987654323abcdef54565"

case149random_more:import string

case149_random:import random

case152_cp:#for i in dc_21 dc_22

case157vlan:'''

case157_sdns:#slb real http "Gao_1_1" 88.8.1.1 80 0 http 3 3

case157_xsh:'''

case161queryperf:#www.gaov6_2.com AAAA

case163wehook:import http.client, urllib

case163xmlrpc:import http.client, urllib

case164restapi:import http.client, urllib

case165devide:import socket

case168_build_10_4_5_infosec_HG:import requests

case169_DNS:import socket

case169_DNS_send:import socket

case169_DNS_send_thread:import socket

case170_long:import requests

case185post_doh:import http.client, urllib

case186base64url:import base64 

case188moressh:#! /bin/python3

case189moressh2:# 多台设备批量执行ssh命令

case190gaotest:import dns.message

case196:import binascii

case196_cve_gao:import httpx

case196_http2_c:import httpcore

case197_cve copy_nouse:import h2

case197_cve1018:import threading

case197_cveeeee_thread:import ssl

case197_cve_one:import ssl

case197_http2_c copy 2:import http.client

case197_http2_c copy:import concurrent.futures

case197_http2_c:import httpx

case197_http2_while:import httpx

case198compare:import re

case199excel_copy:import pandas as pd

case200_locust copy:# This locust test script example will simulate a user 

case200_locust:import os

case201_method:import random

case203more_key_value:import random

case204bkdrhash:def bkdrhash(hash_str):

case205_srcport:#author:gaozc

case207ping_delay:#author:gaozc

case207syn_delay:#author:gaozc

case208all:#author:gaozc

case208ping_time:import subprocess

case209qrcode:import pyqrcode

case210_hex_num:#HTTP/2 RST PACKET

case211_write:import os

case212more_ipv4:import os

case212more_ipv6:import os

case213_33950:with open('D:/Python_case_100/YunShangfuzai', 'r', encoding='utf-8') as infile:

case215_update_file:import os

case216_keepport:keepport = 53330

case218_dns_name:import random

case220_:#

case221_test:#test self

0327:ICMP：差错通知+信息查询

